// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["postgresqlExtensions"]
  extensions      = [citext, uuid-ossp]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Account {
  id        String     @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  name      String     @unique @db.Citext
  createdAt DateTime   @default(now()) @map("created_at")
  passwords Password[]

  emails   Email[]   @relation("account")
  sessions Session[]

  @@map("accounts")
}

model Email {
  id        String @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  email     String @unique @db.Citext
  accountId String @map("account_id") @db.Uuid

  account Account @relation("account", fields: [accountId], references: [id], onDelete: Cascade, onUpdate: Cascade)

  @@map("emails")
}

model Password {
  id        String   @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  accountId String   @map("account_id") @db.Uuid
  password  String   @db.Char(60)
  createdAt DateTime @default(now()) @map("created_at")

  account Account @relation(fields: [accountId], references: [id], onDelete: Cascade, onUpdate: Cascade)

  @@map("passwords")
}

model Session {
  id        String   @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  accountId String   @db.Uuid
  name      String?  @db.VarChar(32)
  createdAt DateTime @default(now()) @map("created_at")

  account Account @relation(fields: [accountId], references: [id], onDelete: Cascade, onUpdate: Cascade)

  @@map("sessions")
}
